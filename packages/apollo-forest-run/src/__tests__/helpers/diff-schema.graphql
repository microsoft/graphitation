type EntityFoo implements EntityInterface {
  id: ID!
  foo: String
  foo2: String
  foo3: String
}

type EntityBar implements EntityInterface, EntityOrPlainObjectInterface {
  ifaceField(simple: Boolean, complete: CompleteInputObject): Boolean
  id: ID!
}

type PlainObjectFoo implements PlainObjectInterface {
  # Note: this type should not have `id` field
  ifaceField(simple: Boolean, complete: CompleteInputObject): Boolean
  foo: String
  foo2: Int!
  entityUnion: EntityUnion
}

type PlainObjectBar implements PlainObjectInterface, EntityOrPlainObjectInterface {
  # Note: this type should not have `id` field
  ifaceField(simple: Boolean, complete: CompleteInputObject): Boolean
  bar: String
  entityUnion: EntityUnion
}

union PlainObjectUnion = PlainObjectFoo | PlainObjectBar
union EntityUnion = EntityFoo | EntityBar
union EntityOrPlainObjectUnion = PlainObjectFoo | EntityFoo

interface EntityInterface {
  id: ID!
}

interface PlainObjectInterface {
  ifaceField(simple: Boolean, complete: CompleteInputObject): Boolean
}

interface EntityOrPlainObjectInterface {
  ifaceField(simple: Boolean, complete: CompleteInputObject): Boolean
}

type EntityFooConnection {
  edges: [EntityFooEdge]
  pageInfo: PageInfo!
}

type EntityFooEdge {
  node: EntityFoo
  cursor: String!
  since: Int
}

type PageInfo {
  hasNextPage: Boolean
}

type CompleteObject {
  id: ID!

  scalar(simple: Boolean, complete: CompleteInputObject): String
  scalarList(simple: Boolean, complete: CompleteInputObject): [String]

  plainObject(simple: Boolean, complete: CompleteInputObject): PlainObjectFoo
  plainObjectList(
    simple: Boolean
    complete: CompleteInputObject
  ): [PlainObjectFoo]

  plainObjectUnion(
    simple: Boolean
    complete: CompleteInputObject
  ): PlainObjectUnion
  plainObjectUnionList(
    simple: Boolean
    complete: CompleteInputObject
  ): [PlainObjectUnion]

  plainObjectInterface(
    simple: Boolean
    complete: CompleteInputObject
  ): PlainObjectInterface
  plainObjectInterfaceList(
    simple: Boolean
    complete: CompleteInputObject
  ): [PlainObjectInterface]

  entity(simple: Boolean, complete: CompleteInputObject): EntityFoo
  entityList(simple: Boolean, complete: CompleteInputObject): [EntityFoo]

  entityUnion(simple: Boolean, complete: CompleteInputObject): EntityUnion
  entityUnionList(simple: Boolean, complete: CompleteInputObject): [EntityUnion]

  connection(first: Int, after: String): EntityFooConnection!

  entityInterface(
    simple: Boolean
    complete: CompleteInputObject
  ): EntityInterface
  entityInterfaceList(
    simple: Boolean
    complete: CompleteInputObject
  ): [EntityInterface]

  entityOrPlainObjectUnion(
    simple: Boolean
    complete: CompleteInputObject
  ): EntityOrPlainObjectUnion
  entityOrPlainObjectUnionList(
    simple: Boolean
    complete: CompleteInputObject
  ): [EntityOrPlainObjectUnion]

  entityOrPlainObjectInterface(
    simple: Boolean
    complete: CompleteInputObject
  ): EntityOrPlainObjectInterface
  entityOrPlainObjectInterfaceList(
    simple: Boolean
    complete: CompleteInputObject
  ): [EntityOrPlainObjectInterface]

  completeObject(simple: Boolean, complete: CompleteInputObject): CompleteObject
  completeObjectList(
    simple: Boolean
    complete: CompleteInputObject
  ): [CompleteObject]
}

input CompleteInputObject {
  id: ID
  idList: [ID]

  int: Int
  intList: [Int]

  string: String
  stringList: [String]

  boolean: Boolean
  booleanList: [Boolean]

  plainObject: PlainObjectFooInput
  plainObjectList: [PlainObjectFooInput]
}

input PlainObjectFooInput {
  ifaceField: Boolean
  foo: String
  foo2: Int!
}
