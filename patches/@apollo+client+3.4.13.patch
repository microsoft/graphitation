diff --git a/node_modules/@apollo/client/cache/cache.cjs.js b/node_modules/@apollo/client/cache/cache.cjs.js
index c9ad278..5cf48a9 100644
--- a/node_modules/@apollo/client/cache/cache.cjs.js
+++ b/node_modules/@apollo/client/cache/cache.cjs.js
@@ -1670,6 +1670,7 @@ function makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, contex
     return {
         args: argsFromFieldSpecifier(fieldSpec),
         field: fieldSpec.field || null,
+        query: context.query,
         fieldName: fieldName,
         storeFieldName: storeFieldName,
         variables: variables,
diff --git a/node_modules/@apollo/client/cache/inmemory/policies.d.ts b/node_modules/@apollo/client/cache/inmemory/policies.d.ts
index 4ac7a5d..28a8da6 100644
--- a/node_modules/@apollo/client/cache/inmemory/policies.d.ts
+++ b/node_modules/@apollo/client/cache/inmemory/policies.d.ts
@@ -1,4 +1,4 @@
-import { InlineFragmentNode, FragmentDefinitionNode, SelectionSetNode, FieldNode } from 'graphql';
+import { DocumentNode, InlineFragmentNode, FragmentDefinitionNode, SelectionSetNode, FieldNode } from 'graphql';
 import { FragmentMap, StoreValue, StoreObject, Reference, isReference } from '../../utilities';
 import { IdGetter, MergeInfo, ReadMergeModifyContext } from "./types";
 import { InMemoryCache } from './inMemoryCache';
@@ -42,6 +42,7 @@ export interface FieldFunctionOptions<TArgs = Record<string, any>, TVars = Recor
     fieldName: string;
     storeFieldName: string;
     field: FieldNode | null;
+    query: DocumentNode;
     variables?: TVars;
     isReference: typeof isReference;
     toReference: ToReferenceFunction;
diff --git a/node_modules/@apollo/client/cache/inmemory/policies.js b/node_modules/@apollo/client/cache/inmemory/policies.js
index 04b892a..f73e6fd 100644
--- a/node_modules/@apollo/client/cache/inmemory/policies.js
+++ b/node_modules/@apollo/client/cache/inmemory/policies.js
@@ -354,6 +354,7 @@ function makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, contex
     return {
         args: argsFromFieldSpecifier(fieldSpec),
         field: fieldSpec.field || null,
+        query: context.query,
         fieldName: fieldName,
         storeFieldName: storeFieldName,
         variables: variables,
