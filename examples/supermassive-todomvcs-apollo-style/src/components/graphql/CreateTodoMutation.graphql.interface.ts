// THIS FILE IS GENERATED BY graphql-codegen. DO NOT MODIFY!
// RUN `yarn generate:interfaces` from the package root to update it
// See <PACKAGE_ROOT>/codegen.yml for details
/* eslint-disable */
// @ts-nocheck

import * as Types from '../src/__generated__/types.js';

import { DocumentNode } from "graphql";
export type CreateTodoMutationVariables = Types.Exact<{
  input: Types.CreateTodoInput;
}>;


export type CreateTodoMutation = { readonly createTodo: { readonly __typename: 'CreateTodoSuccess', readonly todo: { readonly __typename: 'Todo', readonly id: string, readonly text: string, readonly isCompleted: boolean } } | { readonly __typename: 'CreateTodoFailure', readonly reason: string } };

export type CreateTodoMutationFragment = { readonly __typename: 'Todo', readonly id: string, readonly text: string, readonly isCompleted: boolean };

export const CreateTodoMutationDocument: DocumentNode = (function(){
var v0 = {
  "kind": "Name",
  "value": "input"
},
v1 = {
  "kind": "Variable",
  "name": (v0/*: any*/)
},
v2 = {
  "kind": "Field",
  "name": {
    "kind": "Name",
    "value": "__typename"
  },
  "arguments": ([]/*: any*/),
  "directives": ([]/*: any*/)
},
v3 = {
  "kind": "Name",
  "value": "CreateTodoMutationFragment"
},
v4 = [
  {
    "defaultValue": null,
    "kind": "LocalArgument",
    "name": "input"
  }
],
v5 = {
  "alias": null,
  "args": null,
  "kind": "ScalarField",
  "name": "__typename",
  "storageKey": null
},
v6 = [
  {
    "alias": null,
    "args": [
      {
        "kind": "Variable",
        "name": "input",
        "variableName": "input"
      }
    ],
    "concreteType": null,
    "kind": "LinkedField",
    "name": "createTodo",
    "plural": false,
    "selections": [
      (v5/*: any*/),
      {
        "kind": "InlineFragment",
        "selections": [
          {
            "alias": null,
            "args": null,
            "concreteType": "Todo",
            "kind": "LinkedField",
            "name": "todo",
            "plural": false,
            "selections": [
              (v5/*: any*/),
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "id",
                "storageKey": null
              },
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "text",
                "storageKey": null
              },
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "isCompleted",
                "storageKey": null
              }
            ],
            "storageKey": null
          }
        ],
        "type": "CreateTodoSuccess",
        "abstractKey": null
      },
      {
        "kind": "InlineFragment",
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "reason",
            "storageKey": null
          }
        ],
        "type": "CreateTodoFailure",
        "abstractKey": null
      }
    ],
    "storageKey": null
  }
];
return {
  "kind": "Document",
  "definitions": [
    {
      "kind": "OperationDefinition",
      "operation": "mutation",
      "name": {
        "kind": "Name",
        "value": "CreateTodoMutation"
      },
      "variableDefinitions": [
        {
          "kind": "VariableDefinition",
          "variable": (v1/*: any*/),
          "type": {
            "kind": "NonNullType",
            "type": {
              "kind": "NamedType",
              "name": {
                "kind": "Name",
                "value": "CreateTodoInput"
              }
            }
          },
          "directives": []
        }
      ],
      "directives": [],
      "selectionSet": {
        "kind": "SelectionSet",
        "selections": [
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "createTodo"
            },
            "arguments": [
              {
                "kind": "Argument",
                "name": (v0/*: any*/),
                "value": (v1/*: any*/)
              }
            ],
            "directives": [],
            "selectionSet": {
              "kind": "SelectionSet",
              "selections": [
                (v2/*: any*/),
                {
                  "kind": "InlineFragment",
                  "typeCondition": {
                    "kind": "NamedType",
                    "name": {
                      "kind": "Name",
                      "value": "CreateTodoSuccess"
                    }
                  },
                  "directives": [],
                  "selectionSet": {
                    "kind": "SelectionSet",
                    "selections": [
                      {
                        "kind": "Field",
                        "name": {
                          "kind": "Name",
                          "value": "todo"
                        },
                        "arguments": [],
                        "directives": [],
                        "selectionSet": {
                          "kind": "SelectionSet",
                          "selections": [
                            {
                              "kind": "FragmentSpread",
                              "name": (v3/*: any*/),
                              "directives": []
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "kind": "InlineFragment",
                  "typeCondition": {
                    "kind": "NamedType",
                    "name": {
                      "kind": "Name",
                      "value": "CreateTodoFailure"
                    }
                  },
                  "directives": [],
                  "selectionSet": {
                    "kind": "SelectionSet",
                    "selections": [
                      {
                        "kind": "Field",
                        "name": {
                          "kind": "Name",
                          "value": "reason"
                        },
                        "arguments": [],
                        "directives": []
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "kind": "FragmentDefinition",
      "name": (v3/*: any*/),
      "typeCondition": {
        "kind": "NamedType",
        "name": {
          "kind": "Name",
          "value": "Todo"
        }
      },
      "directives": [],
      "selectionSet": {
        "kind": "SelectionSet",
        "selections": [
          (v2/*: any*/),
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "id"
            },
            "arguments": [],
            "directives": []
          },
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "text"
            },
            "arguments": [],
            "directives": []
          },
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "isCompleted"
            },
            "arguments": [],
            "directives": []
          }
        ]
      }
    }
  ],
  "__relay": {
    "fragment": {
      "argumentDefinitions": (v4/*: any*/),
      "kind": "Fragment",
      "metadata": null,
      "name": "CreateTodoMutation",
      "selections": (v6/*: any*/),
      "type": "Mutation",
      "abstractKey": null
    },
    "kind": "Request",
    "operation": {
      "argumentDefinitions": (v4/*: any*/),
      "kind": "Operation",
      "name": "CreateTodoMutation",
      "selections": (v6/*: any*/)
    },
    "params": {
      "cacheID": "d41d8cd98f00b204e9800998ecf8427e",
      "metadata": {},
      "name": "CreateTodoMutation",
      "operationKind": "mutation",
      "text": ""
    }
  }
};
})();
export const CreateTodoMutationFragmentDocument: DocumentNode = {
  "kind": "Document",
  "definitions": [
    {
      "kind": "FragmentDefinition",
      "name": {
        "kind": "Name",
        "value": "CreateTodoMutationFragment"
      },
      "typeCondition": {
        "kind": "NamedType",
        "name": {
          "kind": "Name",
          "value": "Todo"
        }
      },
      "directives": [],
      "selectionSet": {
        "kind": "SelectionSet",
        "selections": [
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "__typename"
            },
            "arguments": [],
            "directives": []
          },
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "id"
            },
            "arguments": [],
            "directives": []
          },
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "text"
            },
            "arguments": [],
            "directives": []
          },
          {
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "isCompleted"
            },
            "arguments": [],
            "directives": []
          }
        ]
      }
    }
  ],
  "__relay": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "CreateTodoMutationFragment",
    "selections": [
      {
        "alias": null,
        "args": null,
        "kind": "ScalarField",
        "name": "__typename",
        "storageKey": null
      },
      {
        "alias": null,
        "args": null,
        "kind": "ScalarField",
        "name": "id",
        "storageKey": null
      },
      {
        "alias": null,
        "args": null,
        "kind": "ScalarField",
        "name": "text",
        "storageKey": null
      },
      {
        "alias": null,
        "args": null,
        "kind": "ScalarField",
        "name": "isCompleted",
        "storageKey": null
      }
    ],
    "type": "Todo",
    "abstractKey": null
  }
};