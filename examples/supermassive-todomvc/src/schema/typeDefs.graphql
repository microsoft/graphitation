directive @model(from: String, tsType: String!) repeatable on OBJECT | SCALAR

type Query {
  allTodos: [Todo!]!
}

type Mutation {
  createTodo(input: CreateTodoInput!): CreateTodoResult!
  updateTodoText(input: UpdateTodoTextInput!): UpdateTodoTextResult!
  setTodoCompleted(input: SetTodoCompletedInput!): SetTodoCompletedResult!
}

type Subscription {
  emitTodos(limit: Int!): Todo
}

type Todo @model(from: "./models", tsType: "TodoModel") {
  id: ID!
  text: String!
  isCompleted: Boolean!
}

interface Failure {
  reason: String!
}

union CreateTodoResult = CreateTodoSuccess | CreateTodoFailure

input CreateTodoInput {
  text: String!
}

type CreateTodoSuccess {
  todo: Todo!
}

type CreateTodoFailure implements Failure {
  reason: String!
}

union UpdateTodoTextResult = UpdateTodoTextSuccess | UpdateTodoTextFailure

input UpdateTodoTextInput {
  id: ID!
  text: String!
}

type UpdateTodoTextSuccess {
  todo: Todo!
}

type UpdateTodoTextFailure implements Failure {
  reason: String!
}

union SetTodoCompletedResult = SetTodoCompletedSuccess | SetTodoCompletedFailure

input SetTodoCompletedInput {
  id: ID!
  isCompleted: Boolean!
}

type SetTodoCompletedSuccess {
  todo: Todo!
}

type SetTodoCompletedFailure implements Failure {
  reason: String!
}
